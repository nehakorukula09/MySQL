1. Directory Listing Attributes
2. Creating files and directories in Linux
3. Changing regular User and root password
4. Command syntax and gettiing help
5. File permissions
6. Adding text to files.
7. File maintenance commands
8. File display commands
9. Linux file editor
10. Linux User account management
11. Switch between users and sudo accounts
12. System management commands
13. Network files and commands in linux.
14. Transfer files using scp
15. System updates and repos (yum commands)
16. Important things to remember in Linux

------------------------------------------------
Important things to remember in Linux:
1. Linux has super user account called root [most powerful account/ can make changes to system config files]
2. Linux is a case-sensitive system
3. Avoid spaces while creating files and directories
4. Linux Kernel is not an operating system. It is a small software within linux OS that takes commands from users and pass them to Hardware or peripherals.
5. Linux is mostly CLI and not GUI.

Linux Navigation commands: [Navigating File system]
1. cd {change directory}
2. pwd {present working directory}
3. ls {list the contents}

What is Root!!
1. 3 types of root on linux system
    1. Root account : Most powerful account
    2. Root as / : Very first directoty in linux [Root directory]
    3. Root home directory : /root

Directory  Listing Attributes:
 1. drwxr-xr-x+  : directory
 2. -rwxr-xr-x   : file
 3. lrwxr-xr-x   : link
 4. type of file  no.of links  owner          user group  size  Created on   Name
    drwxr-xr-x    5            nehakorukula   staff        160  Jul 14  2023 workspace

Commands Syntax:
command option(s) argument(s)
Options: modify the way command works , consists of a hyphen/dash(-)  also multiple commands can be grouped toagther after (-).
Arguments: most commands are used together with one or more arguments , commands assume default if none of the arguments are supplied.
Eg: ls -ltr Music [ls : command , -ltr : option , Music : argument(directory/file)]
HELP of a command : man <command>
Eg: man ls
Quit Help : Enter q

Creating files and directories:
1. touch : create an empty file
Eg: touch <filename>
2. cp   : copying existing file(file1) to a different file(file2)
Eg: cp file1.txt file2.txt
3. vi   : File Editor in Linux
Eg: vi <filename> and enter the contents and exit using :wq!
4. mkdir : create a directory
Eg: mkdir <directory name>

Changing Password:
1. change password using command --> passwd userid [Only root can use this].
2. If already connected as that user just use command -->passwd.

File and Directory permissions:
1. UNIX multi user system , Every file can be accessed by different users based on permissions.
2. Permissions for a file are of 3 types:
      1. r : read
      2. w : write
      3. x : execute
3. Each permission can be controlled by 3 levels:
      1. u : user 
      2. g : group
      3. o : other
4. File / Directory permissions can be checked by running ls -l
5. Command to change permission is 'chmod'.

Eg : 
-rw-r--r--    1 nehakorukula  staff      188 Oct 18  2023 file.txt
User nehakorukula has only read and write permissions
Group staff has only access to read
others , all other users have only read permissions.
===================
Adding write permissions to group , adding execute to other and remove write permissions from user.
chmod g+w file.txt
chmod o+x file.txt
chmod u-w file.txt
-r--rw-r-x  1 nehakorukula  staff  188 Oct 18  2023 file.txt
=====================
Remove read permissions from all of them
chmod a-r file.txt
-----w---x  1 nehakorukula  staff  188 Oct 18  2023 file.txt
=====================
User to have all the permissions and group and other only read.
chmod u+rwx file.txt     
chmod g-w+r file.txt
chmod o-x+r file.txt
-rwxr--r--  1 nehakorukula  staff  188 Oct 18  2023 file.txt

Help Commands:
1. 3 types of help commands:
    1. whatis command
    2. command --help
    3. man command
Eg:
whatis ls
ls (1)               - list directory contents
whatis pwd
pwd (1)              - print name of current/working directory
==================

Adding text to files (Redirects)

3 ways to add tect to file
1. vi -> file creation and adding text
2. Redirect command output > or >>
3. echo > or >>
--> cat is a command to read contents of file.

===================
Pipes: (|)
A pipe is used by the shell to connect the output of one command directly to the input of another command.
command1 [arguments] | command2 [arguments]
Eg : ls -ltr | grep *.txt
Last line : ls -l | tail -1
First line of a file : cat file.txt | head -1

====================
File maintenance commands:
1. cp -> copy
2. rm -> remove
3. mv -> move / rename
4. mkdir -> create directory
5. rmdir -> remove directory [rm -r]
6. chgrp -> permissions of group
7. chown -> permissions of owner
=====================
File Display commands:

cat -> display contents of file.
more -> contents of file one page wise.
less -> contents of page in reverse order alos one line at a time.
head -> first few lines
tail -> last few lines

======================
Linux file editor

vi -> visual editor
ed -> standard line editor
ex -> extended line editor
emacs -> A full screen editor
pico -> Beginner's editor
vim -> Advance version of vi.

Common keys in vi:
i -> insert
esc -> Escape out of any mode
r -> replace
d -> delete
:q! -> quit without saving
:wq! -> quit and save
=========================

Users Account management
useradd
groupadd
userdel
groupdel
usermod

files:
/etc/passwd
/etc/group
/etc/shadow

Eg: useradd -g <groupname> -s /bin/bash -c "user description" -m -d <user home directory> <username>

=====================
Switch users and sudo access:
su - username
sudo command
visudo
file : /etc/sudoers
=====================
Process status:

ps 
Eg: ps -> shows the processes of current shell

PID: Unique process id
TTY : terminal type that the user logged in to
TIME : amount of CPU in minutes and seconds that the process has been running
CMD:  name of command

Eg : 
ps -e -> shows all running process
ps aux -> shows all running process in BSD format
ps -ef -> shows all running process in full format listing
ps -u username --> shows all process running by a user

top -> shows linux proceses and provides real time view of running system
eg: top -> interactive mode , exit by q

PID: show tasks unique process id
USER : Username of owner of task
PR : The PR field shows the scheduling priority of the process from the perspective of the kernel.
NI : Responses of Nice value of task. A negative nice values implies higher priorit , postive value means lower priority.
VIRT : Total virtual memory used by Task
RES : memory consumed by the process in RAM
SHR : Represents the amount of shared memory used by a task
S : The field shows the process state in a single-letter form
%CPU : Represents CPU percentage
%MEM : shows memory usage of task
TIME+ : CPU time , the same ad 'TIME', but reflecting more granularity through hundreths of a second.

Eg : 
top -u <username> [Processes running by a specific user]
top then press c [shows commands absolute path]
top then press k [kill a process by PID within top session]
top then M and P [To sort all linux running processes by memory usage]

TOP command refreshes the information every 3 seconds.
=======================================
crontab : scheduling tasks

crontab -e  --> edit crontab
crontab -l  --> list crontab entries
crontab -r --> remove crontab
crontab -r <entry number> specific entry removal in crontab 
crond --> crontab daemo/service that manages scheduling
systemctl status crond --> TO manage the crond service

* * * * * <command to execute>
minute [0-50] hour [0-23] day of month [1-31] month [1-12] day of the week [0-6 (sun to sat) 7 (also sunday on some systems)]

=========================================
Network Files and Commands
Interface detection
Assigning an IP address
Interface configuration files
1. /etc/nsswitch.conf -> Resolve hostname for IP address
2. /etc/hosts -> define the IP with hostnames
3. /etc/sysconfig/network -> specify the hostname and modify parameters until Centos6 and from Centos7 (/etc/hostname)
4. /etc/sysconfig/network-scripts -> Mention IP  subnet , gateway etc
5. /etc/resolv.conf -> Resolves DNS name to Ip address.

Network commands:
ping -> connectivity check for IP/DNS name
ifconfig -> interface config
ifup or ifdown -> make interface up / down
netstat -> IP routing table
tcpdump -> All the transactions in and out of the machine.

=======================================
SCP : secure copy protocol , similar to File transfer FTP butt with security and authentication
FTP : File transfer protocol.

protocol : set of rules to communicate by users
Default SCP port : 22 (~ to SSH)
========================================

System Updates and Repos (Repositories)

yum (CentOS) , apt-get (other linux)
Cofiguration files locaton : /etc/yum/repos.d
* Access to internet is needed

RPM (Redhat package manager)
-> Package is already downloaded and installs the package [At palces where there is no internet access]
YUM
-> Package is downloaded and installed.

Eg:
rpm -qa (query all) -> lists all installed packages
yum install bind (Install DNS)
rpm -ihv <location of rpm> -> install a package
rpm -e <package name> -> removes the package



